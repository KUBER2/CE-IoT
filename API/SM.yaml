openapi: 3.0.0
info:
  version: "0.0.1"
  title: "Semantic Mediator"
servers:
  - url: http://localhost:8000

paths:
  /mediation:
    get:
      description: "Return list of current available mediations"
      operationId: getMediationList
      tags:
        - Mediation
      security:
        - bearerAuth: []
      responses:
        "200":
          $ref: "#/components/responses/MediationListResponse"
    post:
      description: "Return list of current available mediations"
      operationId: addMediation
      tags:
        - Mediation
      security:
        - bearerAuth: []
      responses:
        "200":
          $ref: "#/components/responses/MediationListResponse"
  /mediation/{id}:
    get:
      description: "Return mediation of given id"
      operationId: getMediation
      tags:
        - Mediation
      security:
        - bearerAuth: []
      summary: Get mediation by ID
      parameters:
        - name: id
          in: path
          description: ID of the mediation
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          $ref: "#/components/responses/MediationResponse"

components:
  requestBodies:
    addMediationRequest:
      description: "Add mediation request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Mediation"
  responses:
    MediationListResponse:
      description: "Return list of the all mediations"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MediationList"
    MediationResponse:
      description: "Return mediation"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Mediation"
  schemas:
    Metadata:
      properties:
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          example: "admin@accordion.eu"
        modifiedAt:
          type: string
          format: date-time
        modifiedBy:
          type: string
          example: "user@accordion.eu"
    Mediation:
      allOf:
        - $ref: "#/components/schemas/NewMediation"
        - type: object
          properties:
            id:
              type: string
              format: uuid
            metadata:
              $ref: "#/components/schemas/Metadata"
    MediationList:
      type: array
      items:
        $ref: "#/components/schemas/Mediation"
    NewMediation:
      type: object
      properties:
        name:
          type: stringa
          example: "Kelvin-Celsius"
        content:
          type: object
  securitySchemes:
    bearerAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://CEIoTProject.eu/oauth/authorize
          tokenUrl: https://CEIoTProject.eu/oauth/token
          scopes:
            read: Read access
            write: Write access
